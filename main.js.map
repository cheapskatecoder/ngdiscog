{"version":3,"sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/interceptors/auth.interceptor.ts","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/shared/services/notification.service.ts","./src/environments/environment.ts","./src/app/shared/interceptors/auth.interceptor.ts","./src/app/modules/auth/components/services/resetpassword.service.ts","./src/app/shared/interceptors/loader.interceptor.ts","./src/app/modules/auth/components/signup/signup.component.ts","./src/app/modules/auth/components/signup/signup.component.html","./src/app/shared/guards/route.guard.ts","./src/app/shared/components/loader/services/loader.service.ts","./src/app/modules/auth/components/services/forgotpassword.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/auth/components/resetpassword/resetpassword.component.ts","./src/app/modules/auth/components/resetpassword/resetpassword.component.html","./src/app/shared/sessions/reducers/loader.reducers.ts","./src/app/modules/dashboard/dashboard.module.ts","./src/app/app.module.ts","./src/app/shared/sessions/actions/user.actions.ts","./src/app/shared/interceptors/http.error.interceptor.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/shared/sessions/actions/loader.actions.ts","./src/app/modules/auth/components/forgotpassword/forgotpassword.component.ts","./src/app/modules/auth/components/forgotpassword/forgotpassword.component.html","./src/app/modules/auth/components/services/auth.service.ts","./src/app/modules/dashboard/components/dashboard/dashboard.component.ts","./src/app/modules/dashboard/components/dashboard/dashboard.component.html","./src/app/modules/auth/components/signin/signin.component.ts","./src/app/modules/auth/components/signin/signin.component.html","./src/app/modules/dashboard/services/dashboard.service.ts","./src/app/modules/dashboard/dashboard-routing.module.ts","./src/app/shared/sessions/reducers/user.reducer.ts","./src/app/app-routing.module.ts","./src/app/shared/initializers/app.initializer.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AuthRoutingModule} from './auth-routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {LoaderComponent} from '../../shared/components/loader/loader.component';\n\n// Custom components\nimport {SigninComponent} from './components/signin/signin.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {ForgotpasswordComponent} from './components/forgotpassword/forgotpassword.component';\nimport {ResetpasswordComponent} from './components/resetpassword/resetpassword.component';\nimport {AuthInterceptor} from './interceptors/auth.interceptor';\n\n@NgModule({\n  declarations: [SigninComponent, SignupComponent, LoaderComponent, ForgotpasswordComponent, ResetpasswordComponent],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, HttpClientModule],\n  exports: [\n    LoaderComponent\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n  ]\n})\nexport class AuthModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    req = req.clone({\n      headers: req.headers.delete('Authorization')\n    });\n    return next.handle(req);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LoaderService} from './services/loader.service';\nimport {Subject} from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent {\n  color = 'primary';\n  mode = 'inderminate';\n  value = 50;\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\n\n  constructor(private loaderService: LoaderService) {\n  }\n}\n","<div *ngIf='isLoading | async' class='overlay'>\n    <div class=\"preloader\">\n      <div class=\"sk-double-bounce\">\n        <div class=\"sk-child sk-double-bounce1\"></div>\n        <div class=\"sk-child sk-double-bounce2\"></div>\n      </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public toastrService: ToastrService) {\n  }\n\n  public showNotification(message: string, type: string = 'info'): void {\n    switch (type) {\n      case 'success':\n        this.toastrService.success(message);\n        break;\n      case 'error':\n        this.toastrService.error(message);\n        break;\n      case 'info':\n        this.toastrService.info(message);\n        break;\n      case 'warning':\n        this.toastrService.warning(message);\n        break;\n      default:\n        this.toastrService.info(message);\n        break;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_PREFIX: 'http://localhost:55403/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaderResponse,\n  HttpInterceptor,\n  HttpRequest, HttpResponse, HttpSentEvent, HttpUserEvent\n} from '@angular/common/http';\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\nimport {AuthService} from '../../modules/auth/components/services/auth.service';\nimport {catchError, filter, switchMap, take} from 'rxjs/operators';\nimport {split} from 'ts-node';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getAccessToken();\n    const splitURL = req.url.split('/');\n    const endPoint = splitURL[splitURL.length - 1];\n\n    // Check if the Endpoint being called is from a component which doesn't require a Auth Token inserted in the headers\n    // If yes, then return the request as is otherwise insert a Auth token\n    if (['reset-password', 'send-reset-password-link', 'forgot-password',\n      'generate-token', 'refresh-token', 'logout', 'signup'].includes(endPoint)) {\n      return next.handle(req);\n    } else {\n      if (token) {\n        req = req.clone({\n          setHeaders: {Authorization: `Bearer ${token}`}\n        });\n      }\n      return next.handle(req);\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetpasswordService {\n\n  constructor(private  http: HttpClient) {\n  }\n\n  resetUserPassword(hashAndPassword): Observable<any> {\n    const data = {'password-hash': hashAndPassword.hash, password: hashAndPassword.newPassword};\n    return this.http.post(environment.API_PREFIX + 'reset-password', data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {finalize} from 'rxjs/operators';\nimport {LoaderService} from '../components/loader/services/loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  constructor(public loaderService: LoaderService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.loaderService.show();\n    return next.handle(req).pipe(\n      finalize(() => this.loaderService.hide())\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../modules/auth/components/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const accessToken = this.authService.getAccessToken();\n\n    if (accessToken) {\n      return true;\n    } else {\n      this.router.navigate(['signin'], {queryParams: {returnUrl: state.url}});\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  isLoading = new Subject<boolean>();\n\n  show(): void {\n    this.isLoading.next(true);\n  }\n\n  hide(): void {\n    this.isLoading.next(false);\n  }\n\n  constructor() {\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../../../environments/environment';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotpasswordService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  sendRecoverPasswordEmailLink(email: {}): Observable<any> {\n    return this.http.post(environment.API_PREFIX + 'send-reset-password-link', email);\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {LoaderModel} from './shared/models/loader.models';\nimport {AppState} from './shared/sessions/app.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'discog-frontend';\n  loaderModule: Observable<LoaderModel>;\n  isLoading: boolean;\n\n  constructor(private router: Router, private store: Store<AppState>) {\n  }\n}\n","<app-loader></app-loader>\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\nimport {NotificationService} from '../../../../shared/services/notification.service';\nimport {ResetpasswordService} from '../services/resetpassword.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  passwordsMatch = false;\n  providedHash;\n  isHidden = false;\n\n  constructor(private activatedRoute: ActivatedRoute, private notificationService: NotificationService,\n              private resetPasswordService: ResetpasswordService) {\n    this.activatedRoute.queryParams.subscribe((res) => {\n      this.providedHash = res.hash;\n    });\n  }\n\n  resetPasswordForm: FormGroup = new FormGroup({\n    hash: new FormControl('', [Validators.required]),\n    newPassword: new FormControl('', [Validators.required]),\n    newPasswordRepeated: new FormControl('', [Validators.required])\n  });\n\n  verifyPasswordsAreSame(): void {\n    if (this.resetPasswordForm.controls.newPassword.value !== this.resetPasswordForm.controls.newPasswordRepeated.value) {\n      this.passwordsMatch = true;\n    } else {\n      this.passwordsMatch = false;\n    }\n  }\n\n  resetUserPassword(hashAndPasswords: {}): void {\n    console.log(this.passwordsMatch);\n    if (!this.passwordsMatch) {\n      this.resetPasswordService.resetUserPassword(hashAndPasswords).subscribe((res) => {\n        this.notificationService.showNotification(res.success, 'success');\n        this.isHidden = true;\n        this.resetPasswordForm.disable();\n      });\n    } else {\n      this.notificationService.showNotification('The passwords need to match', 'error');\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"login\">\n  <div class=\"d-flex align-items-center\" style=\"min-height: 100vh\">\n    <div class=\"col-sm-8 col-md-6 col-lg-4 mx-auto\" style=\"min-width: 300px\">\n      <div class=\"text-center mt-5 mb-1\">\n        <div class=\"avatar avatar-lg\">\n          <img\n            src=\"assets/images/logo/primary.svg\"\n            class=\"avatar-img rounded-circle\"\n            alt=\"LearnPlus\"\n          />\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center mb-5 navbar-light\">\n        <a routerLink=\"signin\" class=\"navbar-brand m-0\">DiscoG Academy</a>\n      </div>\n      <div class=\"card navbar-shadow\">\n        <div class=\"card-header text-center\">\n          <h4 class=\"card-title\">Forgot Password</h4>\n          <p class=\"card-subtitle\">Don't worry we have got you covered, fill the form to receive a password reset\n            link</p>\n        </div>\n        <div class=\"card-body\">\n          <form\n            method=\"post\"\n            [formGroup]=\"resetPasswordForm\"\n            (ngSubmit)=\"resetUserPassword(resetPasswordForm.value)\"\n          >\n            <div class=\"alert alert-light border-1 border-left-3 border-left-primary d-flex\" role=\"alert\"\n                 *ngIf=\"isHidden\">\n              <i class=\"material-icons text-success mr-3\">check_circle</i>\n              <div class=\"text-body\">\n                Your password has been successfully reset! Click here to go to the <a routerLink=\"/signin\">Login page</a>\n              </div>\n            </div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"passwordsMatch\">\n              <strong>Error!</strong>\n              Passwords don't match!\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">Password Hash</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"text\"\n                  formControlName=\"hash\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Password Hash\"\n                  disabled=\"disabled\"\n                  [ngModel]=\"providedHash\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"fas fa-hashtag\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">Password</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"password\"\n                  formControlName=\"newPassword\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Your new password\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"fas fa-lock\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">Repeat Password</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"password\"\n                  (change)=\"verifyPasswordsAreSame()\"\n                  formControlName=\"newPasswordRepeated\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Repeat your password\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"fas fa-lock\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                Recover Password\n              </button>\n            </div>\n            <div class=\"text-center\">\n              <a\n                routerLink=\"/signin\"\n                class=\"text-black-70\"\n                style=\"text-decoration: underline\"\n              >Already have an account? Signin!</a\n              >\n            </div>\n          </form>\n        </div>\n        <div class=\"card-footer text-center text-black-50\">\n          Not yet a student? <a href=\"guest-signup.html\">Sign Up</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Action} from '@ngrx/store';\nimport {LoaderModel} from '../../models/loader.models';\nimport * as LoaderActions from './../actions/loader.actions';\n\n\nconst initialState: LoaderModel = {\n  isLoading: false\n};\n\nexport function loaderReducer(state: LoaderModel = initialState, action: LoaderActions.Actions): {} {\n  switch (action.type) {\n    case LoaderActions.IS_LOADING:\n      return action.payload;\n    default:\n      return initialState;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DashboardRoutingModule} from './dashboard-routing.module';\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    HttpClientModule\n  ],\n  exports: [\n  ]\n})\nexport class DashboardModule {\n  constructor() {\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AuthModule} from './modules/auth/auth.module';\nimport {DashboardModule} from './modules/dashboard/dashboard.module';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {JwtModule} from '@auth0/angular-jwt';\nimport {StoreModule} from '@ngrx/store';\nimport {loaderReducer} from './shared/sessions/reducers/loader.reducers';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {LoaderService} from './shared/components/loader/services/loader.service';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {LoaderInterceptor} from './shared/interceptors/loader.interceptor';\nimport {HttpErrorInterceptor} from './shared/interceptors/http.error.interceptor';\nimport {AuthInterceptor} from './shared/interceptors/auth.interceptor';\nimport {userDetailReducer} from './shared/sessions/reducers/user.reducer';\nimport {appInitializer} from './shared/initializers/app.initializer';\nimport {AuthService} from './modules/auth/components/services/auth.service';\n\nexport function tokenGetter(): string {\n  return localStorage.getItem('access-token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    // Custom models\n    AuthModule,\n    DashboardModule,\n\n    // 3rd party helper modules used by the entire application\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n      timeOut: 6000,\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter,\n        allowedDomains: ['http://localhost:4200']\n      }\n    }),\n    StoreModule.forRoot({\n      loader: loaderReducer,\n      userDetails: userDetailReducer\n    }),\n  ],\n  providers: [\n    {provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthService]},\n    LoaderService,\n    {provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Action} from '@ngrx/store';\nimport {UserDetailModel} from '../../../models/user-detail.model';\n\n\nexport const ADD_USER_DETAIL = 'ADD_USER_DETAIL';\n\nexport class UserDetailAction implements Action {\n  readonly type = ADD_USER_DETAIL;\n\n  constructor(public payload: UserDetailModel) {\n  }\n}\n\nexport type Actions = UserDetailAction;\n","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse} from '@angular/common/http';\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\nimport {retry, catchError} from 'rxjs/operators';\nimport {NotificationService} from '../services/notification.service';\nimport {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../modules/auth/components/services/auth.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\n    null\n  );\n\n  constructor(private notificationService: NotificationService, private authService: AuthService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(catchError(error => {\n      if ([401, 403].includes(error.status)) {\n        this.authService.logout();\n      }\n\n      if (error.error.detail){\n        this.notificationService.showNotification(error.error.detail, 'error');\n      } else if (error.error.error){\n        this.notificationService.showNotification(error.error.error, 'error');\n      }\n\n      const err = (error && error.error && error.error.message) || error.statusText;\n      return throwError(err);\n    }));\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SigninComponent} from './components/signin/signin.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {ForgotpasswordComponent} from './components/forgotpassword/forgotpassword.component';\nimport {ResetpasswordComponent} from './components/resetpassword/resetpassword.component';\nimport {DashboardComponent} from '../dashboard/components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: SigninComponent, children: [\n      {path: 'signin', component: SigninComponent}\n    ]\n  },\n  {path: 'signup', component: SignupComponent},\n  {path: 'forgot-password', component: ForgotpasswordComponent},\n  {path: 'reset-password', component: ResetpasswordComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Action} from '@ngrx/store';\nimport {LoaderModel} from '../../models/loader.models';\n\nexport const IS_LOADING = 'IS_LOADING';\n\nexport class Loading implements Action {\n  readonly type = IS_LOADING;\n\n  constructor(public payload: LoaderModel) {\n  }\n}\n\nexport type Actions = Loading;\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ForgotpasswordService} from '../services/forgotpassword.service';\nimport {NotificationService} from '../../../../shared/services/notification.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n  isHidden = false;\n\n  constructor(private forgotPasswordService: ForgotpasswordService,\n              private notificationService: NotificationService) {\n  }\n\n  forgotPasswordForm: FormGroup = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    }\n  );\n\n\n  sendPasswordRecoveryLink(email): void {\n    this.forgotPasswordService.sendRecoverPasswordEmailLink(email).subscribe((res) => {\n      this.notificationService.showNotification(res.Success, 'success');\n      this.isHidden = true;\n      this.forgotPasswordForm.disable();\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"login\">\n  <div class=\"d-flex align-items-center\" style=\"min-height: 100vh\">\n    <div class=\"col-sm-8 col-md-6 col-lg-4 mx-auto\" style=\"min-width: 300px\">\n      <div class=\"text-center mt-5 mb-1\">\n        <div class=\"avatar avatar-lg\">\n          <img\n            src=\"assets/images/logo/primary.svg\"\n            class=\"avatar-img rounded-circle\"\n            alt=\"LearnPlus\"\n          />\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center mb-5 navbar-light\">\n        <a routerLink=\"signin\" class=\"navbar-brand m-0\">DiscoG Academy</a>\n      </div>\n      <div class=\"card navbar-shadow\">\n        <div class=\"card-header text-center\">\n          <h4 class=\"card-title\">Forgot Password</h4>\n          <p class=\"card-subtitle\">Don't worry we have got you covered, fill the form to receive a password reset\n            link</p>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"alert alert-light border-1 border-left-3 border-left-primary d-flex\" role=\"alert\" *ngIf=\"isHidden\">\n            <i class=\"material-icons text-success mr-3\">check_circle</i>\n            <div class=\"text-body\">An email with password reset instructions has been sent to your email address, if it\n              exists on our system.\n            </div>\n          </div>\n          <form\n            method=\"post\"\n            [formGroup]=\"forgotPasswordForm\"\n            (ngSubmit)=\"sendPasswordRecoveryLink(forgotPasswordForm.value)\"\n          >\n            <div class=\"form-group\">\n              <label class=\"form-label\">Your email address:</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Your email address\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"far fa-envelope\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"isHidden\">\n                Recover Password\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {HttpClient, HttpHandler, HttpHeaders, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {environment} from 'src/environments/environment';\nimport {BehaviorSubject, Observable, Subscription} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // tslint:disable-next-line:variable-name\n  private _accessToken: string = localStorage.getItem('accessToken');\n  // tslint:disable-next-line:variable-name\n  private _refreshToken: string = localStorage.getItem('refreshToken');\n\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService, private router: Router) {\n  }\n\n  public getAccessToken(): string {\n    return this._accessToken;\n  }\n\n  public signOutJWT(refresh: {}): Observable<any> {\n    return this.http.post(environment.API_PREFIX + 'logout-jwt', refresh);\n  }\n\n  public setAccessToken(token: string): void {\n    localStorage.setItem('refreshToken', token);\n    this._refreshToken = token;\n  }\n\n  public logout(): void {\n    this.router.navigate(['signin']);\n  }\n\n  public getRefreshToken(): string {\n    return this._refreshToken;\n  }\n\n  public setRefreshToken(token: string): void {\n    localStorage.setItem('refreshToken', token);\n    this._refreshToken = token;\n  }\n\n  set refreshToken(refreshToken: string) {\n    localStorage.setItem('refreshToken', refreshToken);\n    this._refreshToken = refreshToken;\n  }\n\n  public isLoggedIn(): boolean {\n    return !!this.getAccessToken();\n  }\n\n  public refreshAccessToken(): Observable<any> {\n    return this.http.post<any>(environment.API_PREFIX + 'refresh-token', {\n      refresh: this.getRefreshToken()\n    });\n  }\n\n  public signIn(emailAndPassword: {}): Observable<any> {\n    return this.http.post(environment.API_PREFIX + 'generate-token', emailAndPassword);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {DashboardService} from '../../services/dashboard.service';\nimport {AppState} from '../../../../shared/sessions/app.state';\nimport {Store} from '@ngrx/store';\nimport * as UserDetailActions from './../../../../shared/sessions/actions/user.actions';\nimport {UserDetailModel} from '../../../../models/user-detail.model';\nimport {AuthService} from '../../../auth/components/services/auth.service';\nimport {Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../../shared/services/notification.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  isShowing = false;\n  userDetails: UserDetailModel;\n\n  constructor(private dashboardService: DashboardService, private store: Store<AppState>,\n              private authService: AuthService, private router: Router, private notificationService: NotificationService) {\n    this.dashboardService.getUserData().subscribe((res) => {\n      this.store.dispatch(new UserDetailActions.UserDetailAction(res));\n    });\n  }\n\n  showNavbar(): void {\n    if (this.isShowing) {\n      this.isShowing = false;\n    } else {\n      this.isShowing = true;\n    }\n  }\n\n  signOut(): void{\n    this.authService.signOutJWT({refresh: this.authService.getRefreshToken()}).subscribe((res) => {\n      this.router.navigate(['signin']);\n      localStorage.clear();\n      this.notificationService.showNotification('You have been logged out successfully!', 'info');\n    });\n  }\n\n  ngOnInit(): void {\n    this.store.select('userDetails').subscribe((output) => {\n      this.userDetails = output;\n    });\n  }\n\n}\n","<!-- Header Layout -->\n<div class=\"mdk-header-layout js-mdk-header-layout\">\n\n  <!-- Header -->\n\n  <div id=\"header\" data-fixed class=\"mdk-header js-mdk-header mb-0\">\n    <div class=\"mdk-header__content\">\n\n      <!-- Navbar -->\n      <nav id=\"default-navbar\" class=\"navbar navbar-expand navbar-dark bg-primary m-0\">\n        <div class=\"container-fluid\">\n          <!-- Toggle sidebar -->\n          <button class=\"navbar-toggler d-block\" data-toggle=\"sidebar\" type=\"button\" (click)=\"showNavbar()\">\n            <span class=\"material-icons\">menu</span>\n          </button>\n\n          <!-- Brand -->\n          <a href=\"\" class=\"navbar-brand\">\n            <img src=\"assets/images/logo/white.svg\" class=\"mr-2\" alt=\"DiscogG Academy\"/>\n            <span class=\"d-none d-xs-md-block\">DiscoG Academy</span>\n          </a>\n\n          <!-- Search -->\n          <form class=\"search-form d-none d-md-flex\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n            <button class=\"btn\" type=\"button\"><i class=\"material-icons font-size-24pt\">search</i></button>\n          </form>\n          <!-- // END Search -->\n\n          <div class=\"flex\"></div>\n\n          <!-- Menu -->\n          <ul class=\"nav navbar-nav flex-nowrap d-none d-lg-flex\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"\">Forum</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"\">Get Help</a>\n            </li>\n          </ul>\n\n          <!-- Menu -->\n          <ul class=\"nav navbar-nav flex-nowrap\">\n\n            <li class=\"nav-item d-none d-md-flex\">\n              <a href=\"\" class=\"nav-link\">\n                <i class=\"material-icons\">shopping_cart</i>\n              </a>\n            </li>\n\n\n            <!-- Notifications dropdown -->\n            <li class=\"nav-item dropdown dropdown-notifications dropdown-menu-sm-full\">\n              <button class=\"nav-link btn-flush dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                      data-dropdown-disable-document-scroll data-caret=\"false\">\n                <i class=\"material-icons\">notifications</i>\n                <span class=\"badge badge-notifications badge-danger\">2</span>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <div data-perfect-scrollbar class=\"position-relative\">\n                  <div class=\"dropdown-header\"><strong>Messages</strong></div>\n                  <div class=\"list-group list-group-flush mb-0\">\n\n                    <a href=\"\" class=\"list-group-item list-group-item-action unread\">\n                                                <span class=\"d-flex align-items-center mb-1\">\n                                                    <small class=\"text-muted\">5 minutes ago</small>\n\n                                                    <span class=\"ml-auto unread-indicator bg-primary\"></span>\n\n                                                </span>\n                      <span class=\"d-flex\">\n                                                    <span class=\"avatar avatar-xs mr-2\">\n                                                        <img src=\"assets/images/people/110/woman-5.jpg\" alt=\"people\"\n                                                             class=\"avatar-img rounded-circle\">\n                                                    </span>\n                                                    <span class=\"flex d-flex flex-column\">\n                                                        <strong>Michelle</strong>\n                                                        <span class=\"text-black-70\">Clients loved the new design.</span>\n                                                    </span>\n                                                </span>\n                    </a>\n\n                    <a href=\"\" class=\"list-group-item list-group-item-action unread\">\n                                                <span class=\"d-flex align-items-center mb-1\">\n                                                    <small class=\"text-muted\">5 minutes ago</small>\n\n                                                    <span class=\"ml-auto unread-indicator bg-primary\"></span>\n\n                                                </span>\n                      <span class=\"d-flex\">\n                                                    <span class=\"avatar avatar-xs mr-2\">\n                                                        <img src=\"assets/images/people/110/woman-5.jpg\" alt=\"people\"\n                                                             class=\"avatar-img rounded-circle\">\n                                                    </span>\n                                                    <span class=\"flex d-flex flex-column\">\n                                                        <strong>Michelle</strong>\n                                                        <span class=\"text-black-70\">🔥 Superb job..</span>\n                                                    </span>\n                                                </span>\n                    </a>\n\n                  </div>\n\n                  <div class=\"dropdown-header\"><strong>System notifications</strong></div>\n                  <div class=\"list-group list-group-flush mb-0\">\n\n                    <a href=\"\"\n                       class=\"list-group-item list-group-item-action border-left-3 border-left-danger\">\n                                                <span class=\"d-flex align-items-center mb-1\">\n                                                    <small class=\"text-muted\">3 minutes ago</small>\n\n                                                </span>\n                      <span class=\"d-flex\">\n                                                    <span class=\"avatar avatar-xs mr-2\">\n                                                        <span class=\"avatar-title rounded-circle bg-light\">\n                                                            <i class=\"material-icons font-size-16pt text-danger\">account_circle</i>\n                                                        </span>\n                                                    </span>\n                                                    <span class=\"flex d-flex flex-column\">\n\n                                                        <span class=\"text-black-70\">Your profile information has not been synced correctly.</span>\n                                                    </span>\n                                                </span>\n                    </a>\n\n                    <a href=\"\" class=\"list-group-item list-group-item-action\">\n                                                <span class=\"d-flex align-items-center mb-1\">\n                                                    <small class=\"text-muted\">5 hours ago</small>\n\n                                                </span>\n                      <span class=\"d-flex\">\n                                                    <span class=\"avatar avatar-xs mr-2\">\n                                                        <span class=\"avatar-title rounded-circle bg-light\">\n                                                            <i class=\"material-icons font-size-16pt text-success\">group_add</i>\n                                                        </span>\n                                                    </span>\n                                                    <span class=\"flex d-flex flex-column\">\n                                                        <strong>Adrian. D</strong>\n                                                        <span\n                                                          class=\"text-black-70\">Wants to join your private group.</span>\n                                                    </span>\n                                                </span>\n                    </a>\n\n                    <a href=\"\" class=\"list-group-item list-group-item-action\">\n                                                <span class=\"d-flex align-items-center mb-1\">\n                                                    <small class=\"text-muted\">1 day ago</small>\n\n                                                </span>\n                      <span class=\"d-flex\">\n                                                    <span class=\"avatar avatar-xs mr-2\">\n                                                        <span class=\"avatar-title rounded-circle bg-light\">\n                                                            <i class=\"material-icons font-size-16pt text-warning\">storage</i>\n                                                        </span>\n                                                    </span>\n                                                    <span class=\"flex d-flex flex-column\">\n\n                                                        <span class=\"text-black-70\">Your deploy was successful.</span>\n                                                    </span>\n                                                </span>\n                    </a>\n\n                  </div>\n                </div>\n              </div>\n            </li>\n            <!-- // END Notifications dropdown -->\n            <!-- User dropdown -->\n            <li class=\"nav-item dropdown ml-1 ml-md-3\">\n              <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\"><img\n                src=\"{{userDetails.profile_photo}}\" alt=\"Avatar\" class=\"rounded-circle\" width=\"40\"></a>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item\" href=\"\">\n                  <i class=\"material-icons\">edit</i> Edit Account\n                </a>\n                <a class=\"dropdown-item\" href=\"\">\n                  <i class=\"material-icons\">person</i> Public Profile\n                </a>\n                <a class=\"dropdown-item\" (click)=\"signOut()\">\n                  <i class=\"material-icons\">lock</i> Logout\n                </a>\n              </div>\n            </li>\n            <!-- // END User dropdown -->\n\n          </ul>\n          <!-- // END Menu -->\n        </div>\n      </nav>\n      <!-- // END Navbar -->\n      <div class=\"container\">\n        <h1 class=\"text-center jumbotron\">Below are user's detail and permissions</h1>\n        <!-- Wrapper -->\n        <div class=\"table-responsive\" data-toggle=\"lists\" data-lists-values='[\"name\"]'>\n          <!-- Table -->\n          <table class=\"table\">\n            <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>User Name</th>\n              <th>Email</th>\n              <th>Phone number</th>\n              <th>Profile Photo</th>\n              <th>Is Active</th>\n              <th>Is Superuser</th>\n              <th>Is Admin</th>\n              <th>Is staff</th>\n              <th>Is Teacher</th>\n            </tr>\n            </thead>\n            <tbody class=\"list\">\n            <tr>\n              <td>{{userDetails.first_name}}</td>\n              <td>{{userDetails.last_name}}</td>\n              <td>{{userDetails.username}}</td>\n              <td>{{userDetails.email}}</td>\n              <td>{{userDetails.phone_number}}</td>\n              <td>{{userDetails.profile_photo}}</td>\n              <td>{{userDetails.is_active}}</td>\n              <td>{{userDetails.is_superuser === true ? userDetails.is_superuser : 'false'}}</td>\n              <td>{{userDetails.is_admin}}</td>\n              <td>{{userDetails.is_staff}}</td>\n              <td>{{userDetails.is_teacher}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {NotificationService} from 'src/app/shared/services/notification.service';\nimport {AuthService} from '../services/auth.service';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '../../../../shared/sessions/app.state';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {timeout} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\n\nexport class SigninComponent implements OnInit {\n  // Set return URL in case the user was redirected to signin page from another page such as Dashboard\n  // This can occur in case a user's Access Token or Refresh Token gets expired\n  returnUrl: any = false;\n\n  constructor(private notificationService: NotificationService, private authService: AuthService,\n              private store: Store<AppState>, private router: Router, private activatedRoute: ActivatedRoute) {\n    // set the value of returnURL if 'returnURL' exists in URL's queryParams\n    // else set it to false\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || false;\n  }\n\n\n  // Create a signin form that has 2 fields email and password\n  // Validators act as conditions that need to be satisfied for the form to be 'valid'\n  signInForm: FormGroup = new FormGroup({\n    email: new FormControl(\n      '',\n      [Validators.required, Validators.email]\n    ),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  // Signin the user once Signin button is pressed on the template\n  public signinUser(emailAndPassword): void {\n    // Check if signin form is valid, i.e. all the validators are satisfied\n    if (this.signInForm.valid) {\n      // Make a call to the backend to see if the credentials supplied in the form are valid\n      // To get the data that came from the backend we need to subscribe to the response\n      // Any errors that occur in any XHR call will be handled by the http.error.interceptor.ts\n      this.authService.signIn(emailAndPassword).subscribe((res) => {\n        // Set access and refresh token in localstorage\n        localStorage.setItem('accessToken', res.access);\n        localStorage.setItem('refreshToken', res.refresh);\n        // Pop a notification that indicates that  the signin was successfull.\n        this.notificationService.showNotification('You have been logged in successfully! You will be redirected soon', 'success');\n        // In case there happens to be a returnURL redirect to that, otherwise redirect to Dashboard\n        this.router.navigate(['dashboard']);\n\n      });\n    } else {\n      // If  the form is invalid we check what Validator wasn't satisfied and construct and error message accordingly\n      let errorString = '';\n      if (this.signInForm.controls.email.errors.required) {\n        errorString += 'A proper email address is required ';\n      }\n      if (this.signInForm.controls.password.errors.required) {\n        errorString += 'Password is required';\n      }\n      // Show the error string that was prepared\n      this.notificationService.showNotification(errorString, 'error');\n    }\n  }\n\n  ngOnInit()\n    :\n    void {\n  }\n}\n","<div class=\"login\">\n  <div class=\"d-flex align-items-center\" style=\"min-height: 100vh\">\n    <div class=\"col-sm-8 col-md-6 col-lg-4 mx-auto\" style=\"min-width: 300px\">\n      <div class=\"text-center mt-5 mb-1\">\n        <div class=\"avatar avatar-lg\">\n          <img\n            src=\"assets/images/logo/primary.svg\"\n            class=\"avatar-img rounded-circle\"\n            alt=\"LearnPlus\"\n          />\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center mb-5 navbar-light\">\n        <a routerLink=\"/signin\" class=\"navbar-brand m-0\">DiscoG Academy</a>\n      </div>\n      <div class=\"card navbar-shadow\">\n        <div class=\"card-header text-center\">\n          <h4 class=\"card-title\">Login</h4>\n          <p class=\"card-subtitle\">Access your account</p>\n        </div>\n        <div class=\"card-body\">\n          <a href=\"\" class=\"btn btn-light btn-block\">\n            <span class=\"fab fa-google mr-2\"></span>\n            Continue with Google\n          </a>\n\n          <div class=\"page-separator\">\n            <div class=\"page-separator__text\">or</div>\n          </div>\n\n          <form\n            method=\"post\"\n            [formGroup]=\"signInForm\"\n            (ngSubmit)=\"signinUser(signInForm.value)\"\n          >\n            <div class=\"form-group\">\n              <label class=\"form-label\">Your email address:</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Your email address\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"far fa-envelope\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">Your password:</label>\n              <div class=\"input-group input-group-merge\">\n                <input\n                  type=\"password\"\n                  formControlName=\"password\"\n                  class=\"form-control form-control-prepended\"\n                  placeholder=\"Your password\"\n                />\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\">\n                    <span class=\"fa fa-lock\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                Login\n              </button>\n            </div>\n            <div class=\"text-center\">\n              <a\n                routerLink=\"forgot-password\"\n                class=\"text-black-70\"\n                style=\"text-decoration: underline\"\n              >Forgot Password?</a\n              >\n            </div>\n          </form>\n        </div>\n        <div class=\"card-footer text-center text-black-50\">\n          Not yet a student? <a href=\"\">Sign Up</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserDetailModel} from '../../../models/user-detail.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserData(): Observable<UserDetailModel>{\n    return this.http.get<UserDetailModel>(environment.API_PREFIX + 'user-details/');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule, Router} from '@angular/router';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class DashboardRoutingModule {\n}\n","import {UserDetailModel} from '../../../models/user-detail.model';\nimport * as UserDetailAction from './../actions/user.actions';\n\n\nconst initialState: UserDetailModel = {\n  id: 0,\n  first_name: '',\n  last_name: '',\n  email: '',\n  username: '',\n  phone_number: 0,\n  profile_photo: '',\n  is_active: false,\n  is_superuser: false,\n  is_admin: false,\n  is_staff: false,\n  is_teacher: false,\n  parent: {\n    id: 0,\n    email: '',\n    first_name: '',\n    last_name: '',\n    parent_id: '',\n  }\n};\n\nexport function userDetailReducer(state: UserDetailModel = initialState, action: UserDetailAction.Actions): UserDetailModel{\n  switch (action.type){\n    case UserDetailAction.ADD_USER_DETAIL:\n      return action.payload;\n    default:\n      return initialState;\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {RouteGuard as RouteGuard} from './shared/guards/route.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\n  },\n  {\n    path: 'dashboard',\n    canActivate: [RouteGuard],\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./modules/dashboard/dashboard.module')\n        .then((m) => m.DashboardModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {AuthService} from '../../modules/auth/components/services/auth.service';\n\nexport function appInitializer(authService: AuthService): any {\n  return () => new Promise(resolve => {\n    authService.refreshAccessToken().subscribe((res) => {\n      console.log('asdfasdf', res);\n    }).add(resolve);\n  });\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}